{"version":3,"sources":["reducers/todos.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","index.js"],"names":["todos","state","action","type","id","text","completed","map","todo","nextTodoId","VisibilityFilters","visibilityFilter","filter","combineReducers","Link","active","children","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","onSubmit","e","preventDefault","value","trim","ref","node","Todo","textDecoration","TodoList","toggleTodo","key","getVisibleTodos","t","Error","App","VisibleTodoList","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.028c6478.chunk.js","sourcesContent":["const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TODO':\r\n        return [\r\n          ...state,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false\r\n          }\r\n        ]\r\n      case 'TOGGLE_TODO':\r\n        return state.map(todo =>\r\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n        )\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default todos","let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n  <button\r\n    onClick={onClick}\r\n    disabled={active}\r\n    style={{\r\n      marginLeft: '4px'\r\n    }}\r\n  >\r\n    {children}\r\n  </button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Link)","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          if (!input.value.trim()) {\r\n            return\r\n          }\r\n          dispatch(addTodo(input.value))\r\n          input.value = ''\r\n        }}\r\n      >\r\n        <input ref={node => (input = node)} />\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <li\r\n    onClick={onClick}\r\n    style={{\r\n      textDecoration: completed ? 'line-through' : 'none'\r\n    }}\r\n  >\r\n    {text}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo => (\r\n      <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}